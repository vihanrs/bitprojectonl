package com.bitprojectonl.controller;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.bitprojectonl.dao.ItemDao;
import com.bitprojectonl.dao.UserDao;
import com.bitprojectonl.entity.Item;
import com.bitprojectonl.entity.User;



@RestController
public class ItemController {

	@Autowired  //inject DesignationDao object into variable
	private ItemDao itemDao;  //create designationDao object

	@Autowired
	private PrivilegeController privilegeController;

	@Autowired
	private UserDao userDao;
	
	@GetMapping(value = "/item/findall", produces = "application/json")
	public List<Item> getAllData(){

		//get logged user authentication object
    	Authentication auth =  SecurityContextHolder.getContext().getAuthentication();
    	
    	if(privilegeController.hasPrivilege(auth.getName(), "Item", "select")) {
    		return itemDao.findAll();
    	}else {
    		return null;
    	}
	}

	@GetMapping(value = "/itemform")
	public ModelAndView itemFormUI() {
		//get loged user authentication object
		Authentication auth =  SecurityContextHolder.getContext().getAuthentication();
				
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.addObject("logusername",auth.getName());
		modelAndView.addObject("title","Item : BIT Project 2023");

		if(privilegeController.hasPrivilege(auth.getName(), "Item", "insert")) {
			modelAndView.setViewName("itemform.html");
			return modelAndView;
		}else {
			modelAndView.setViewName("error.html");
    		return modelAndView;
    	}
	}

	@GetMapping(value = "/itemtable")
	public ModelAndView itemTableUI() {
		//get loged user authentication object
		Authentication auth =  SecurityContextHolder.getContext().getAuthentication();
				
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.addObject("logusername",auth.getName());
		modelAndView.addObject("title","Item : BIT Project 2023");

		if(privilegeController.hasPrivilege(auth.getName(), "Item", "select")) {
			modelAndView.setViewName("itemtable.html");
			return modelAndView;
		}else {
			modelAndView.setViewName("error.html");
    		return modelAndView;
    	}
	}

	@PostMapping(value = "/item")
	public String saveItem(@RequestBody Item item) {
		//get loged user authentication object
		Authentication auth =  SecurityContextHolder.getContext().getAuthentication();

		//check authorization
		if(privilegeController.hasPrivilege(auth.getName(), "Item", "insert")) {
			return "Access Denied !!!";
		}
		//check duplicates

		try{
			
			User loggedUser = userDao.getUserByUserName(auth.getName());
			//set autogenerated values
			item.setAddedDateTime(LocalDateTime.now());
			item.setAdded_user_id(loggedUser);
			
			//when set the deleted user
			//item.setDelete_user(loggedUser.getId());
			
			String nextItemCode = itemDao.getNextItemCode();
			if(nextItemCode == null) {
				item.setItemcode("I00001");
			}else {
				item.setItemcode(nextItemCode);
			}
			//operation
			itemDao.save(item);
			//set dependans - Ex:create new stock row when creating item

			return "OK";
		} catch (Exception e) {
			return "Save not completed : "+e.getMessage();
		}
		
	}
	
}
